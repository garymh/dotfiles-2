{
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
      "rootPatterns": [
        "compile_commands.json",
        ".ccls",
        ".ccls-cache",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cacheDirectory": ".ccls-cache"
      },
      "settings": {
        "codeLens.enable": true
      }
    },
    "lua": {
      "command": "/home/wil/projects/lua-language-server/bin/Linux/lua-language-server",
      "args": [
        "-E",
        "-e",
        "LANG=en",
        "/home/wil/projects/lua-language-server/main.lua"
      ],
      "filetypes": ["lua"],
      "rootPatterns": [".git/"]
    },
    //  // "lua": {
    //  //   "command": "lua-lsp",
    //  //   "filetypes": ["lua"]
    //  // },
    //  // "lua": {
    //  //   "command": "java",
    //  //   "args": ["-cp", "/home/wil/projects/EmmyLua-LanguageServer/EmmyLua-LS/build/libs/EmmyLua-LS-all.jar", "com.tang.vscode.MainKt"],
    //  //   "filetypes": ["lua"],
    //  //   "rootPatterns": [".git/"]
    //  // },
    //  "haskell": {
    //    "command": "hie-wrapper",
    //    "rootPatterns": [".stack.yaml", "cabal.config", "package.yaml"],
    //    "filetypes": ["hs", "lhs", "haskell"],
    //    "initializationOptions": {},
    //    "settings": {
    //      "languageServerHaskell": {
    //        "hlintOn": true,
    //        "maxNumberOfProblems": 10,
    //        "completionSnippetsOn": true
    //      }
    //    }
    //  },
    "ocaml": {
      "command": "ocaml-language-server",
      "args": ["--stdio"],
      "filetypes": ["ocaml", "reason"]
    },
    "julia": {
      "command": "/usr/bin/julia",
      "args": [
        "--startup-file=no",
        "--history-file=no",
        "-e",
        "using LanguageServer;\n using Pkg;\n import StaticLint;\n import SymbolServer;\n env_path = dirname(Pkg.Types.Context().env.project_file);\n debug = false;\n server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict());\n server.runlinter = true;\n run(server);"
      ],
      "filetypes": ["julia"]
    }
  },
  "suggest.noselect": false,
  "suggest.preferCompleteThanJumpPlaceholder": true,
  "suggest.timeout": 5000,
  "rust-client.channel": "stable",
  "suggest.completionItemKindLabels": {
    "function": "\uf794",
    "method": "\uf6a6",
    "variable": "\uf71b",
    "constant": "\uf8ff",
    "struct": "\ufb44",
    "class": "\uf0e8",
    "interface": "\ufa52",
    "text": "\ue612",
    "enum": "\uf435",
    "enumMember": "\uf02b",
    "module": "\uf668",
    "color": "\ue22b",
    "property": "\ufab6",
    "field": "\uf93d",
    "unit": "\uf475",
    "file": "\uf471",
    "value": "\uf8a3",
    "event": "\ufacd",
    "folder": "\uf115",
    "keyword": "\uf893",
    "snippet": "\uf64d",
    "operator": "\uf915",
    "reference": "\uf87a",
    "typeParameter": "\uf278",
    "default": "\uf29c"
  },
  "diagnostic.errorSign": "ðŸ—™",
  "diagnostic.warningSign": "âž¤",
  "python.jediEnabled": false,
  "python.formatting.provider": "yapf",
  "coc.source.around.enable": false,
  "suggest.enablePreview": true,
  "highlight.document.enable": true,
  "coc.source.buffer.enable": false,
  "latex.build.onSave": true,
  "latex.forwardSearch.executable": "zathura",
  "latex.forwardSearch.args": ["--synctex-forward", "%l:1:%f", "%p"]
}
